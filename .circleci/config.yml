version: 2.1

orbs:
  golang: cci-orb/golang@0.0.6

defaults: &defaults
  executor: golang/stretch
  environment:
    GO111MODULE: 'on'
  working_directory: /go/src/github.com/zchee/color

jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - golang/gomod
      - run:
          name: Install go-junit-report binary
          command: |
            GO111MODULE=off go get -u github.com/jstemmer/go-junit-report
      - run:
          name: Take test coverage and output test results to junit syntax
          command: |
            mkdir -p /tmp/ci/artifacts /tmp/ci/test-results
            go test -v -race -covermode=atomic -coverpkg=./... -coverprofile=/tmp/ci/artifacts/coverage.out ./... 2>&1 | tee /dev/stderr | go-junit-report -set-exit-code > /tmp/ci/test-results/junit.xml
            if [[ -f '/tmp/ci/artifacts/coverage.out' ]]; then go tool cover -html=/tmp/ci/artifacts/coverage.out -o /tmp/ci/artifacts/coverage.html; fi
      - run:
          name: Upload test coverages to codecov.io
          command: |
            bash <(curl -s https://codecov.io/bash) -f /tmp/ci/artifacts/coverage.out
      - store_artifacts:
          path: /tmp/ci/artifacts
      - store_artifacts:
          path: /tmp/ci/test-results
      - store_test_results:
          path: /tmp/ci/test-results

  bench:
    docker:
      - image: google/cloud-sdk:alpine
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /etc/google/application_default_credentials.json
    working_directory: /go/src/github.com/zchee/color
    steps:
      - checkout
      - run:
          name: Authorize GCP project
          command: |
            mkdir -p $(dirname ${GOOGLE_APPLICATION_CREDENTIALS})
            echo "${GOOGLE_APPLICATION_CREDENTIALS_JSON}" > ${GOOGLE_APPLICATION_CREDENTIALS}
            gcloud auth activate-service-account --key-file ${GOOGLE_APPLICATION_CREDENTIALS}
            gcloud config set project ${GOOGLE_CLOUD_PROJECT}
      - run:
          name: Run benchmark on GCE
          command: |
            gcloud compute instances create --image-project=debian-cloud --image-family=debian-9 --machine-type "n1-standard-16" --preemptible --zone "asia-northeast1-a" --scopes "https://www.googleapis.com/auth/cloud-platform" --metadata="gsutil_benchstat_bucket_name=${GSUTIL_BENCHSTAT_BUCKET_NAME}" --metadata-from-file='startup-script=hack/gce-benchmark.bash' --verbosity='debug' 'benchstat'

workflows:
  version: 2
  workflows:
    jobs:
      - test:
          context: org-global
      - bench:
          context: org-global
